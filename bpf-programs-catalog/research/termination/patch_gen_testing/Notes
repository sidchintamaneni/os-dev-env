Test 1:

```
SEC("tp/syscalls/sys_enter_socket")
int bpf_prog_trigger_syscall_prog(void *ctx) {

    return 0;

}
```

```
[   34.408625][  T294] compare_bpf_progs: prog->aux->name - bpf_prog_trigge
[   34.410207][  T294] compare_bpf_progs: prog->len - 2
[   34.411401][  T294] compare_bpf_progs: patch_prog->len - 2
[   34.412703][  T294] original prog:
[   34.413487][  T294] code	dst_reg	src_reg	off		imm
[   34.414606][  T294] 0xb7	0x0	0x0	0x0		0x0
[   34.415399][  T294] 0x95	0x0	0x0	0x0		0x0
[   34.416334][  T294] patch prog:
[   34.416979][  T294] code	dst_reg	src_reg	off		imm
[   34.418065][  T294] 0xb7	0x0	0x0	0x0		0x0
[   34.419040][  T294] 0x95	0x0	0x0	0x0		0x0
[   34.419999][  T294] bpf_prog_load: prog->jited_len 24
[   34.421242][  T294] bpf_prog_load: patch_prog->jited_len 24
```

Test 2:

```
SEC("tp/syscalls/sys_enter_socket")
int bpf_prog_trigger_syscall_prog(void *ctx) {

	unsigned int pid = bpf_get_current_pid_tgid() >> 32;

	bpf_printk("bpf_prog_trigger_syscall_prog: pid %d", pid);

    return 0;

}
```

```
[  352.489681][  T330] compare_bpf_progs: prog->len - 9
[  352.490505][  T330] compare_bpf_progs: patch_prog->len - 9
[  352.491412][  T330] original prog:
[  352.491975][  T330] code	dst_reg	src_reg	off		imm
[  352.492786][  T330] 0x85	0x0	0x0	0x0		0x3d780
[  352.493538][  T330] 0x77	0x0	0x0	0x0		0x20
[  352.494246][  T330] 0x18	0x1	0x0	0x0		0x11e6f08
[  352.495022][  T330] 0x0	0x0	0x0	0x0		0xff110001
[  352.495829][  T330] 0xb7	0x2	0x0	0x0		0x26
[  352.496513][  T330] 0xbf	0x3	0x0	0x0		0x0
[  352.497182][  T330] 0x85	0x0	0x0	0x0		0xfffeb750
[  352.497965][  T330] 0xb7	0x0	0x0	0x0		0x0
[  352.498664][  T330] 0x95	0x0	0x0	0x0		0x0
[  352.499325][  T330] patch prog:
[  352.499884][  T330] code	dst_reg	src_reg	off		imm
[  352.500682][  T330] 0x85	0x0	0x0	0x0		0x44ac0
[  352.501423][  T330] 0x77	0x0	0x0	0x0		0x20
[  352.502119][  T330] 0x18	0x1	0x0	0x0		0x11e6f08
[  352.502888][  T330] 0x0	0x0	0x0	0x0		0xff110001
[  352.503691][  T330] 0xb7	0x2	0x0	0x0		0x26
[  352.504383][  T330] 0xbf	0x3	0x0	0x0		0x0
[  352.505040][  T330] 0x85	0x0	0x0	0x0		0xfffeb750
[  352.505856][  T330] 0xb7	0x0	0x0	0x0		0x0
[  352.506550][  T330] 0x95	0x0	0x0	0x0		0x0
[  352.507348][  T330] bpf_prog_load: prog->jited_len 56
[  352.508247][  T330] bpf_prog_load: patch_prog->jited_len 56
```

Test 3:

```
SEC("tp/syscalls/sys_enter_socket")
int bpf_prog_trigger_syscall_prog(void *ctx) {

	unsigned int pid = bpf_get_current_pid_tgid() >> 32;
	unsigned int cpu_id = bpf_get_smp_processor_id();

	bpf_printk("bpf_prog_trigger_syscall_prog: pid %d and cpu id %d\n", pid, cpu_id);

    return 0;

}
```

```
[ 1009.082367][  T338] compare_bpf_progs: prog->len - 14
[ 1009.083496][  T338] compare_bpf_progs: patch_prog->len - 12
[ 1009.084563][  T338] original prog:
[ 1009.085375][  T338] code	dst_reg	src_reg	off		imm
[ 1009.086382][  T338] 0x85	0x0	0x0	0x0		0x3d780
[ 1009.087403][  T338] 0xbf	0x6	0x0	0x0		0x0
[ 1009.088371][  T338] 0xb7	0x0	0x0	0x0		0x83b51034
[ 1009.089331][  T338] 0xbf	0x0	0x0	0xffffffff		0x0
[ 1009.090145][  T338] 0x61	0x0	0x0	0x0		0x0
[ 1009.090731][  T338] 0x77	0x6	0x0	0x0		0x20
[ 1009.091544][  T338] 0x18	0x1	0x0	0x0		0x11e5b08
[ 1009.092464][  T338] 0x0	0x0	0x0	0x0		0xff110001
[ 1009.093502][  T338] 0xb7	0x2	0x0	0x0		0x35
[ 1009.094463][  T338] 0xbf	0x3	0x6	0x0		0x0
[ 1009.095432][  T338] 0xbf	0x4	0x0	0x0		0x0
[ 1009.096230][  T338] 0x85	0x0	0x0	0x0		0xfffeb750
[ 1009.097146][  T338] 0xb7	0x0	0x0	0x0		0x0
[ 1009.097926][  T338] 0x95	0x0	0x0	0x0		0x0
[ 1009.098791][  T338] patch prog:
[ 1009.099595][  T338] code	dst_reg	src_reg	off		imm
[ 1009.100757][  T338] 0x85	0x0	0x0	0x0		0x44ac0
[ 1009.101851][  T338] 0xbf	0x6	0x0	0x0		0x0
[ 1009.102850][  T338] 0x85	0x0	0x0	0x0		0x44ac0
[ 1009.103866][  T338] 0x77	0x6	0x0	0x0		0x20
[ 1009.104689][  T338] 0x18	0x1	0x0	0x0		0x11e5b08
[ 1009.105432][  T338] 0x0	0x0	0x0	0x0		0xff110001
[ 1009.106172][  T338] 0xb7	0x2	0x0	0x0		0x35
[ 1009.106848][  T338] 0xbf	0x3	0x6	0x0		0x0
[ 1009.107512][  T338] 0xbf	0x4	0x0	0x0		0x0
[ 1009.108349][  T338] 0x85	0x0	0x0	0x0		0xfffeb750
[ 1009.109339][  T338] 0xb7	0x0	0x0	0x0		0x0
[ 1009.110212][  T338] 0x95	0x0	0x0	0x0		0x0
[ 1009.111234][  T338] bpf_prog_load: prog->jited_len 83
[ 1009.112336][  T338] bpf_prog_load: patch_prog->jited_len 69

```

Mismatch is due to inlining of bpf_get_smp_processor_id function inside the
verifier. For now I've added it to the skip list in patch_generator

Comparing after change:
```
[   50.229379][  T283] compare_bpf_progs: prog->len - 14
[   50.230566][  T283] compare_bpf_progs: patch_prog->len - 14
[   50.231754][  T283] original prog:
[   50.232494][  T283] code	dst_reg	src_reg	off		imm
[   50.233571][  T283] 0x85	0x0	0x0	0x0		0x3d770
[   50.234602][  T283] 0xbf	0x6	0x0	0x0		0x0
[   50.235443][  T283] 0xb7	0x0	0x0	0x0		0x83b51034
[   50.236455][  T283] 0xbf	0x0	0x0	0xffffffff		0x0
[   50.237489][  T283] 0x61	0x0	0x0	0x0		0x0
[   50.238410][  T283] 0x77	0x6	0x0	0x0		0x20
[   50.239288][  T283] 0x18	0x1	0x0	0x0		0x2a75308
[   50.240333][  T283] 0x0	0x0	0x0	0x0		0xff110001
[   50.241375][  T283] 0xb7	0x2	0x0	0x0		0x35
[   50.242303][  T283] 0xbf	0x3	0x6	0x0		0x0
[   50.243078][  T283] 0xbf	0x4	0x0	0x0		0x0
[   50.243880][  T283] 0x85	0x0	0x0	0x0		0xfffeb750
[   50.244797][  T283] 0xb7	0x0	0x0	0x0		0x0
[   50.245622][  T283] 0x95	0x0	0x0	0x0		0x0
[   50.246484][  T283] patch prog:
[   50.247122][  T283] code	dst_reg	src_reg	off		imm
[   50.248016][  T283] 0x85	0x0	0x0	0x0		0x44ab0
[   50.248866][  T283] 0xbf	0x6	0x0	0x0		0x0
[   50.249612][  T283] 0xb7	0x0	0x0	0x0		0x83b51034
[   50.250580][  T283] 0xbf	0x0	0x0	0xffffffff		0x0
[   50.251505][  T283] 0x61	0x0	0x0	0x0		0x0
[   50.252281][  T283] 0x77	0x6	0x0	0x0		0x20
[   50.253100][  T283] 0x18	0x1	0x0	0x0		0x2a75308
[   50.253982][  T283] 0x0	0x0	0x0	0x0		0xff110001
[   50.254902][  T283] 0xb7	0x2	0x0	0x0		0x35
[   50.255721][  T283] 0xbf	0x3	0x6	0x0		0x0
[   50.256488][  T283] 0xbf	0x4	0x0	0x0		0x0
[   50.257261][  T283] 0x85	0x0	0x0	0x0		0xfffeb750
[   50.258129][  T283] 0xb7	0x0	0x0	0x0		0x0
[   50.258950][  T283] 0x95	0x0	0x0	0x0		0x0
[   50.260228][  T283] bpf_prog_load: prog->jited_len 83
[   50.261130][  T283] bpf_prog_load: patch_prog->jited_len 83
```

Test 4:
```
SEC("tp/syscalls/sys_enter_socket")
int bpf_prog_trigger_syscall_prog(void *ctx) {

	unsigned int pid = bpf_get_current_pid_tgid() >> 32;
	unsigned int numa_id = bpf_get_numa_node_id();

	bpf_printk("bpf_prog_trigger_syscall_prog: pid %d and numa id %d\n", pid, numa_id);

    return 0;

}
```

```
[ 1602.324648][  T351] compare_bpf_progs: prog->len - 12
[ 1602.325673][  T351] compare_bpf_progs: patch_prog->len - 12
[ 1602.326957][  T351] original prog:
[ 1602.327788][  T351] code	dst_reg	src_reg	off		imm
[ 1602.328908][  T351] 0x85	0x0	0x0	0x0		0x3d780
[ 1602.329877][  T351] 0xbf	0x6	0x0	0x0		0x0
[ 1602.330863][  T351] 0x85	0x0	0x0	0x0		0x3d5b0
[ 1602.331776][  T351] 0x77	0x6	0x0	0x0		0x20
[ 1602.332681][  T351] 0x18	0x1	0x0	0x0		0x11e7b08
[ 1602.333696][  T351] 0x0	0x0	0x0	0x0		0xff110001
[ 1602.334814][  T351] 0xb7	0x2	0x0	0x0		0x36
[ 1602.335654][  T351] 0xbf	0x3	0x6	0x0		0x0
[ 1602.336472][  T351] 0xbf	0x4	0x0	0x0		0x0
[ 1602.337261][  T351] 0x85	0x0	0x0	0x0		0xfffeb750
[ 1602.338042][  T351] 0xb7	0x0	0x0	0x0		0x0
[ 1602.338764][  T351] 0x95	0x0	0x0	0x0		0x0
[ 1602.339459][  T351] patch prog:
[ 1602.340025][  T351] code	dst_reg	src_reg	off		imm
[ 1602.340973][  T351] 0x85	0x0	0x0	0x0		0x44ac0
[ 1602.341982][  T351] 0xbf	0x6	0x0	0x0		0x0
[ 1602.342952][  T351] 0x85	0x0	0x0	0x0		0x44ac0
[ 1602.343827][  T351] 0x77	0x6	0x0	0x0		0x20
[ 1602.344627][  T351] 0x18	0x1	0x0	0x0		0x11e7b08
[ 1602.345600][  T351] 0x0	0x0	0x0	0x0		0xff110001
[ 1602.346611][  T351] 0xb7	0x2	0x0	0x0		0x36
[ 1602.347590][  T351] 0xbf	0x3	0x6	0x0		0x0
[ 1602.348481][  T351] 0xbf	0x4	0x0	0x0		0x0
[ 1602.349341][  T351] 0x85	0x0	0x0	0x0		0xfffeb750
[ 1602.350322][  T351] 0xb7	0x0	0x0	0x0		0x0
[ 1602.351196][  T351] 0x95	0x0	0x0	0x0		0x0
[ 1602.352072][  T351] bpf_prog_load: prog->jited_len 69
[ 1602.353292][  T351] bpf_prog_load: patch_prog->jited_len 69
```

Test 5:
```
struct {
	__uint(type, BPF_MAP_TYPE_HASH);
	__uint(max_entries, 10);
	__type(key, int);
	__type(value, int);
} hash_map SEC(".maps");

SEC("tp/syscalls/sys_enter_socket")
int bpf_prog_trigger_syscall_prog(void *ctx) {
	const int key = 0;
	const int val = 1;
	int err;
	err = bpf_map_update_elem(&hash_map, &key, &val, BPF_ANY);
    return 0;
}
char LISENSE[] SEC("license") = "Dual BSD/GPL";
```

```
[  405.750396][  T295] compare_bpf_progs: prog->len - 14
[  405.751341][  T295] compare_bpf_progs: patch_prog->len - 14
[  405.752411][  T295] original prog:
[  405.753103][  T295] code	dst_reg	src_reg	off		imm
[  405.754002][  T295] 0xb7	0x1	0x0	0x0		0x0
[  405.754840][  T295] 0x63	0xa	0x1	0xfffffffc		0x0
[  405.755734][  T295] 0xb7	0x1	0x0	0x0		0x1
[  405.756555][  T295] 0x63	0xa	0x1	0xfffffff8		0x0
[  405.757590][  T295] 0xbf	0x2	0xa	0x0		0x0
[  405.758428][  T295] 0x7	0x2	0x0	0x0		0xfffffffc
[  405.759308][  T295] 0xbf	0x3	0xa	0x0		0x0
[  405.760104][  T295] 0x7	0x3	0x0	0x0		0xfffffff8
[  405.761025][  T295] 0x18	0x1	0x0	0x0		0x2d25400
[  405.761902][  T295] 0x0	0x0	0x0	0x0		0xff110001
[  405.762815][  T295] 0xb7	0x4	0x0	0x0		0x0
[  405.763649][  T295] 0x85	0x0	0x0	0x0		0x4b120
[  405.764442][  T295] 0xb7	0x0	0x0	0x0		0x0
[  405.765239][  T295] 0x95	0x0	0x0	0x0		0x0
[  405.765971][  T295] patch prog:
[  405.766624][  T295] code	dst_reg	src_reg	off		imm
[  405.767529][  T295] 0xb7	0x1	0x0	0x0		0x0
[  405.768279][  T295] 0x63	0xa	0x1	0xfffffffc		0x0
[  405.769104][  T295] 0xb7	0x1	0x0	0x0		0x1
[  405.769915][  T295] 0x63	0xa	0x1	0xfffffff8		0x0
[  405.770783][  T295] 0xbf	0x2	0xa	0x0		0x0
[  405.771554][  T295] 0x7	0x2	0x0	0x0		0xfffffffc
[  405.772474][  T295] 0xbf	0x3	0xa	0x0		0x0
[  405.773235][  T295] 0x7	0x3	0x0	0x0		0xfffffff8
[  405.774100][  T295] 0x18	0x1	0x0	0x0		0x2d25400
[  405.774999][  T295] 0x0	0x0	0x0	0x0		0xff110001
[  405.775875][  T295] 0xb7	0x4	0x0	0x0		0x0
[  405.776704][  T295] 0x85	0x0	0x0	0x0		0x44ab0
[  405.777547][  T295] 0xb7	0x0	0x0	0x0		0x0
[  405.778387][  T295] 0x95	0x0	0x0	0x0		0x0
[  405.779076][  T295] bpf_prog_load: prog->jited_len 75
[  405.779985][  T295] bpf_prog_load: patch_prog->jited_len 75
```

Test 6:
```
struct {
	__uint(type, BPF_MAP_TYPE_HASH);
	__uint(max_entries, 10);
	__type(key, int);
	__type(value, int);
} hash_map SEC(".maps");

SEC("tp/syscalls/sys_enter_socket")
int bpf_prog_trigger_syscall_prog(void *ctx) {

	const int key = 0;
	const int val = 1;
	int err;

	err = bpf_map_update_elem(&hash_map, &key, &val, BPF_ANY);
	if (err)
		return 0;

	int *value = bpf_map_lookup_elem(&hash_map, &key);
	if (value) {
		__sync_fetch_and_add(value, 1);
	} else {
		err = bpf_map_update_elem(&hash_map, &key, &val, BPF_ANY);
	}

    return 0;

}
```
[ 1100.680732][  T313] compare_bpf_progs: prog->len - 14
[ 1100.681877][  T313] compare_bpf_progs: patch_prog->len - 14
[ 1100.683120][  T313] original prog:
[ 1100.683932][  T313] code	dst_reg	src_reg	off		imm
[ 1100.685028][  T313] 0xb7	0x1	0x0	0x0		0x0
[ 1100.685988][  T313] 0x63	0xa	0x1	0xfffffffc		0x0
[ 1100.687003][  T313] 0xb7	0x1	0x0	0x0		0x1
[ 1100.687903][  T313] 0x63	0xa	0x1	0xfffffff8		0x0
[ 1100.688986][  T313] 0xbf	0x2	0xa	0x0		0x0
[ 1100.689900][  T313] 0x7	0x2	0x0	0x0		0xfffffffc
[ 1100.690942][  T313] 0xbf	0x3	0xa	0x0		0x0
[ 1100.691814][  T313] 0x7	0x3	0x0	0x0		0xfffffff8
[ 1100.692891][  T313] 0x18	0x1	0x0	0x0		0x129ac00
[ 1100.693991][  T313] 0x0	0x0	0x0	0x0		0xff110001
[ 1100.695050][  T313] 0xb7	0x4	0x0	0x0		0x0
[ 1100.695878][  T313] 0x85	0x0	0x0	0x0		0x4b120
[ 1100.696823][  T313] 0xb7	0x0	0x0	0x0		0x0
[ 1100.697758][  T313] 0x95	0x0	0x0	0x0		0x0
[ 1100.698657][  T313] patch prog:
[ 1100.699425][  T313] code	dst_reg	src_reg	off		imm
[ 1100.700491][  T313] 0xb7	0x1	0x0	0x0		0x0
[ 1100.701416][  T313] 0x63	0xa	0x1	0xfffffffc		0x0
[ 1100.702452][  T313] 0xb7	0x1	0x0	0x0		0x1
[ 1100.703366][  T313] 0x63	0xa	0x1	0xfffffff8		0x0
[ 1100.704300][  T313] 0xbf	0x2	0xa	0x0		0x0
[ 1100.705310][  T313] 0x7	0x2	0x0	0x0		0xfffffffc
[ 1100.706379][  T313] 0xbf	0x3	0xa	0x0		0x0
[ 1100.707266][  T313] 0x7	0x3	0x0	0x0		0xfffffff8
[ 1100.708258][  T313] 0x18	0x1	0x0	0x0		0x129ac00
[ 1100.709326][  T313] 0x0	0x0	0x0	0x0		0xff110001
[ 1100.710351][  T313] 0xb7	0x4	0x0	0x0		0x0
[ 1100.711225][  T313] 0x85	0x0	0x0	0x0		0x44ab0
[ 1100.712212][  T313] 0xb7	0x0	0x0	0x0		0x0
[ 1100.713160][  T313] 0x95	0x0	0x0	0x0		0x0
[ 1100.714060][  T313] bpf_prog_load: prog->jited_len 75
[ 1100.715285][  T313] bpf_prog_load: patch_prog->jited_len 75
```

